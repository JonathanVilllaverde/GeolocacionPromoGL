apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'


version = '1.0'


repositories {
	mavenLocal()
    mavenCentral()
	maven {
	    url 'http://repo.spray.io/'
    }
}

configurations {
  runtimeOnly
}

dependencies {

	ext {    
	    springVersion = "3.2.4.RELEASE"
	    jerseyVersionOld = "1.1.5.2"
	    jerseyVersion = "1.9"
	}    
	
	/* Logger */	    
	compile ("ch.qos.logback:logback-classic:1.1.2")    
	    
	/* Spring dependencies */
    compile("org.springframework:spring-web:$springVersion")
	compile("org.springframework:spring-core:$springVersion")
	testCompile("org.springframework:spring-test:$springVersion")  
	
	/* Test dependencies */
    testCompile 'junit:junit:4.8.2'
	    
    /* Jackson JSON Mapper */
    compile ("org.codehaus.jackson:jackson-jaxrs:1.9.13")    
    compile ("org.codehaus.jackson:jackson-xc:1.9.13")

	/* Java dependencies */
	providedCompile("javax.servlet:servlet-api:2.5")
	
	/* MongoDB dependencies */
	compile ("org.mongodb:mongo-java-driver:2.12.3")
	compile ("org.springframework.data:spring-data-mongodb:1.6.0.RELEASE")
	
	/* Jersey Rest dependencies*/
    compile ("com.sun.jersey:jersey-server:$jerseyVersionOld")
    compile ("com.sun.jersey:jersey-client:$jerseyVersionOld")
    compile ("com.sun.jersey:jersey-json:$jerseyVersionOld")
    compile ("com.sun.jersey.contribs:jersey-spring:$jerseyVersionOld")
    
    /* CORS-Filter Dependencies*/
    compile ("com.thetransactioncompany:cors-filter:2.0")
    compile ("com.thetransactioncompany:java-property-utils:1.9.1")
	
	// to run our App on Heroku
    runtimeOnly "org.mortbay.jetty:jetty-runner:8.1.1.v20120215"
    // monitoring on Heroku
    runtimeOnly "com.newrelic.agent.java:newrelic-agent:2.18.0"

}

task copyToLib << {
  copy {
    from configurations.runtimeOnly.copy().setTransitive(false)
    into "$buildDir/libs"
    rename { name ->
      def artifacts = configurations.runtimeOnly.resolvedConfiguration.resolvedArtifacts
      def artifact = artifacts.find { it.file.name == name }
      "${artifact.name}.${artifact.extension}"
    }
  }
}

task stage(dependsOn: ["clean", "war", "copyToLib"])

